<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">

	<!-- jQuery JS
	====================================================================== -->
	<link rel="stylesheet" type="text/css" href="../../themes/base/jquery-ui.css" />
	<link rel="stylesheet" type="text/css" href="../themes/demo.css" />

	<!-- jQuery CSS
	====================================================================== -->
	<script type="text/javascript" src="../../scripts/jquery.js"> </script>
	<script type="text/javascript" src="../../scripts/ui/jquery-ui.js"> </script>

	<!-- Fine Uploader New/Modern CSS file
	====================================================================== -->
	<link href="../themes/fine-uploader-new.css" rel="stylesheet">

	<!-- Fine Uploader jQuery JS file
	====================================================================== -->
	<script src="../scripts/jquery.fine-uploader.js"></script>

	<!-- Fine Uploader Thumbnails template w/ customization
	====================================================================== -->
	<script type="text/template" id="qq-template-manual-trigger">
		<div class="qq-uploader-selector qq-uploader" qq-drop-area-text="Drop files here">
			<div class="qq-total-progress-bar-container-selector qq-total-progress-bar-container">
				<div role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" class="qq-total-progress-bar-selector qq-progress-bar qq-total-progress-bar"></div>
			</div>
			<div class="qq-upload-drop-area-selector qq-upload-drop-area" qq-hide-dropzone>
				<span class="qq-upload-drop-area-text-selector"></span>
			</div>
			<div class="buttons">
				<div class="qq-upload-button-selector qq-upload-button">
					<div>Select files...</div>
				</div>
				<button type="button" id="trigger-upload" class="btn btn-primary">
					<i class="icon-upload icon-white"></i> Upload
				</button>
			</div>
			<span class="qq-drop-processing-selector qq-drop-processing">
				<span>Processing dropped files...</span>
				<span class="qq-drop-processing-spinner-selector qq-drop-processing-spinner"></span>
			</span>
			<ul class="qq-upload-list-selector qq-upload-list" aria-live="polite" aria-relevant="additions removals">
				<li>
					<div class="qq-progress-bar-container-selector">
						<div role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" class="qq-progress-bar-selector qq-progress-bar"></div>
					</div>
					<span class="qq-upload-spinner-selector qq-upload-spinner"></span>
					<img class="qq-thumbnail-selector" qq-max-size="100" qq-server-scale>
					<span class="qq-upload-file-selector qq-upload-file"></span>
					<span class="qq-edit-filename-icon-selector qq-edit-filename-icon" aria-label="Edit filename"></span>
					<input class="qq-edit-filename-selector qq-edit-filename" tabindex="0" type="text">
					<span class="qq-upload-size-selector qq-upload-size"></span>
					<button type="button" class="qq-btn qq-upload-cancel-selector qq-upload-cancel">Cancel</button>
					<button type="button" class="qq-btn qq-upload-retry-selector qq-upload-retry">Retry</button>
					<button type="button" class="qq-btn qq-upload-delete-selector qq-upload-delete">Delete</button>
					<span role="status" class="qq-upload-status-text-selector qq-upload-status-text"></span>
				</li>
			</ul>

			<dialog class="qq-alert-dialog-selector">
				<div class="qq-dialog-message-selector"></div>
				<div class="qq-dialog-buttons">
					<button type="button" class="qq-cancel-button-selector">Close</button>
				</div>
			</dialog>

			<dialog class="qq-confirm-dialog-selector">
				<div class="qq-dialog-message-selector"></div>
				<div class="qq-dialog-buttons">
					<button type="button" class="qq-cancel-button-selector">No</button>
					<button type="button" class="qq-ok-button-selector">Yes</button>
				</div>
			</dialog>

			<dialog class="qq-prompt-dialog-selector">
				<div class="qq-dialog-message-selector"></div>
				<input type="text">
				<div class="qq-dialog-buttons">
					<button type="button" class="qq-cancel-button-selector">Cancel</button>
					<button type="button" class="qq-ok-button-selector">Ok</button>
				</div>
			</dialog>
		</div>
	</script>

	<style>
		#trigger-upload {
			color: white;
			background-color: #00ABC7;
			font-size: 14px;
			padding: 7px 20px;
			background-image: none;
		}

		#fine-uploader-manual-trigger .qq-upload-button {
			margin-right: 15px;
		}

		#fine-uploader-manual-trigger .buttons {
			width: 36%;
		}

		#fine-uploader-manual-trigger .qq-uploader .qq-total-progress-bar-container {
			width: 60%;
		}
	</style>

	<title>Fine-Upload Demo</title>
</head>
<body>

	<div>
		<h1>Fine-Upload File Demo</h1>
		<button id="back" class="demo ui-button ui-corner-all ui-widget">&laquo; Back</button>
		<button id="reset" class="demo ui-button ui-corner-all ui-widget">Reset</button>
	</div>
	<div class="demo-description">
		<p>
			This page is used for demonstrating the uploading of a file to the nodeJs server using Fine-Uploader.js.
		</p>
	</div>

	<!-- Fine Uploader DOM Element
	====================================================================== -->
	<div id="fine-uploader-manual-trigger"></div>

	<!-- Your code to create an instance of Fine Uploader and bind to the DOM/template
	====================================================================== -->
	<script type="text/javascript">
		var uploader;
		(createUploader = function() {
			uploader = new window.qq.FineUploader({
				debug: true, // Log messages are written to the window.console object when true.
				element: $("#fine-uploader-manual-trigger")[0],
				autoUpload: false,
				template: "qq-template-manual-trigger",
				request: {
					endpoint: "/uploads" // The endpoint (route) to send upload requests to.
				},
				thumbnails: {
					placeholders: {
						waitingPath: "../themes/source/placeholders/waiting-generic.png",
						notAvailablePath: "../themes/source/placeholders/not_available-generic.png"
					}
				},
				retry: {
					enableAuto: false // Enable or disable retrying uploads that receive any error response. (defaults to false)
				},
				callbacks: {
					onComplete: function(id, name, response) {
						//var serverPathToFile = response.filePath;
						//var fileItem = this.getItemByFileId(id);
						if(response.success) {
							//var viewBtn = window.qq(fileItem).getByClass("view-btn")[0];
							//viewBtn.setAttribute("href", serverPathToFile);
							//window.qq(viewBtn).removeClass("hide");
						}
					}
				},
				multiple: true, // Prevents user from simultaneously selecting or dropping more than one item when false.
				validation: {
					//allowedExtensions: ['pdf'],
					sizeLimit: 5242880, // The maximum allowable size, in bytes, for an item. (5 MB = 5 *1024 * 1024 bytes)
					itemLimit: 5 // Maximum number of items that can be potentially uploaded in this session. Will reject all items that are added or retried after this limit is reached.
				}
			});
		}());

		$("#trigger-upload").on("click", function() {
			uploader.uploadStoredFiles();
		});

		$("#back").on("click", function() {
			history.go(-1);
			return false;
		});

		$("#reset").on("click", function() {
			uploader.cancelAll(); // Cancels all queued or currently uploading items.
			return false;
		});
	</script>
</body>
</html>